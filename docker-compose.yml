version: '3.3'

services:
  saleor:
    build: .
    container_name: saleor-api
    ports:
      - 8000:8000
    restart: unless-stopped
    networks:
      - saleor-backend-tier
      - monitoring
    stdin_open: true
    tty: true
    depends_on:
      - db
      - redis
    volumes:
      - saleor-media:/app/media
      - ./logs:/app/logs
    env_file:
      - common.env
      - backend.env
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - DASHBOARD_URL=http://localhost:9000/
      - ALLOWED_HOSTS=localhost,127.0.0.1,172.18.44.198
      - ALLOWED_CLIENT_HOSTS=localhost,127.0.0.1,172.18.44.198
      - DEBUG=True

  db:
    image: library/postgres:13-alpine
    ports:
      - 5432:5432
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-db:/var/lib/postgresql/data
      - ./replica_user.sql:/docker-entrypoint-initdb.d/replica_user.sql
    environment:
      - POSTGRES_USER=saleor
      - POSTGRES_PASSWORD=saleor

  redis:
    image: library/redis:7.0-alpine
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-redis:/data

  dashboard:
    image: ghcr.io/saleor/saleor-dashboard:latest
    ports:
      - 9000:80
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=http://107.22.90.68/prometheus/'
    networks:
      - monitoring
      - saleor-backend-tier

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana/
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - monitoring

  alert-manager:
    image: prom/alertmanager:latest
    container_name: alert-manager
    restart: unless-stopped
    volumes:
      - ./alertmanager:/config
      - alertmanager-data:/data
    networks:
      - monitoring
    ports:
      - 9093:9093
    command:
      - '--config.file=/config/alertmanager.yml'
      - '--web.external-url=http://107.22.90.68/alertmanager/'
      - '--log.level=debug'


  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - node.name=elasticsearch
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTIC_PASSWORD=admin
      - KIBANA_PASSWORD=admin
      - xpack.security.http.ssl.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1

    volumes:
      - ./elk/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk
  
  logstash:
    image: docker.elastic.co/logstash/logstash:8.4.0
    container_name: logstash
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: admin
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./elk/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elk/logstash/pipeline/logs:/usr/share/logstash/pipeline/logs
      - ./logs:/app/logstash/logs
    ports:
      - "5044:5044"
      - "9600:9600"
    networks:
      - elk
    depends_on:
      - elasticsearch
  
  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=admin
      - TELEMETRY_ENABLED=false
    volumes:
      - ./elk/kibana/kibana.yml:/usr/share/kibana/kibana.yml
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

volumes:
  saleor-media:
  saleor-db:
    driver: local
  saleor-redis:
    driver: local
  alertmanager-data:
  grafana_data:
  logs:
    driver: local

networks:
  saleor-backend-tier:
    driver: bridge
  monitoring:
    driver: bridge
  elk:
    driver: bridge
